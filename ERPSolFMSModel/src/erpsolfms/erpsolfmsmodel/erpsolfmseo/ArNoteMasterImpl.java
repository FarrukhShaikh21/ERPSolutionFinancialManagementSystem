package erpsolfms.erpsolfmsmodel.erpsolfmseo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobClassModel;
import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 07 15:01:53 PKT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ArNoteMasterImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NoteCode,
        Customerid,
        Deptid,
        Companyid,
        DocTypeId,
        Locationid,
        EntryDate,
        TotalAmount,
        RefVoucher,
        Submit,
        PostToIntFace,
        PostToGl,
        Createdby,
        Modifiedby,
        CreatedDate,
        ModifiedDate,
        SubmitBy,
        GlvoucherNo,
        ArPosted,
        Salespersonid,
        Pid,
        Remarks,
        RemarksNarr,
        FromSaleDate,
        ToSaleDate,
        DiscountType,
        AuditorCheck,
        AuditRemarks,
        RefSalesorderid,
        RefDoctypeid,
        RefVoucherNo,
        IsMigrated,
        MigratedDate,
        DocDate,
        LocCurrcode,
        ExchangeRate,
        FcurrTotalAmount,
        Notemasterseq,
        txtCustomerName,
        txtSalesPersonName,
        ArNoteDetail,
        AllCustomers,
        SoSalesPersons;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int NOTECODE = AttributesEnum.NoteCode.index();
    public static final int CUSTOMERID = AttributesEnum.Customerid.index();
    public static final int DEPTID = AttributesEnum.Deptid.index();
    public static final int COMPANYID = AttributesEnum.Companyid.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int ENTRYDATE = AttributesEnum.EntryDate.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int REFVOUCHER = AttributesEnum.RefVoucher.index();
    public static final int SUBMIT = AttributesEnum.Submit.index();
    public static final int POSTTOINTFACE = AttributesEnum.PostToIntFace.index();
    public static final int POSTTOGL = AttributesEnum.PostToGl.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int SUBMITBY = AttributesEnum.SubmitBy.index();
    public static final int GLVOUCHERNO = AttributesEnum.GlvoucherNo.index();
    public static final int ARPOSTED = AttributesEnum.ArPosted.index();
    public static final int SALESPERSONID = AttributesEnum.Salespersonid.index();
    public static final int PID = AttributesEnum.Pid.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int REMARKSNARR = AttributesEnum.RemarksNarr.index();
    public static final int FROMSALEDATE = AttributesEnum.FromSaleDate.index();
    public static final int TOSALEDATE = AttributesEnum.ToSaleDate.index();
    public static final int DISCOUNTTYPE = AttributesEnum.DiscountType.index();
    public static final int AUDITORCHECK = AttributesEnum.AuditorCheck.index();
    public static final int AUDITREMARKS = AttributesEnum.AuditRemarks.index();
    public static final int REFSALESORDERID = AttributesEnum.RefSalesorderid.index();
    public static final int REFDOCTYPEID = AttributesEnum.RefDoctypeid.index();
    public static final int REFVOUCHERNO = AttributesEnum.RefVoucherNo.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int DOCDATE = AttributesEnum.DocDate.index();
    public static final int LOCCURRCODE = AttributesEnum.LocCurrcode.index();
    public static final int EXCHANGERATE = AttributesEnum.ExchangeRate.index();
    public static final int FCURRTOTALAMOUNT = AttributesEnum.FcurrTotalAmount.index();
    public static final int NOTEMASTERSEQ = AttributesEnum.Notemasterseq.index();
    public static final int TXTCUSTOMERNAME = AttributesEnum.txtCustomerName.index();
    public static final int TXTSALESPERSONNAME = AttributesEnum.txtSalesPersonName.index();
    public static final int ARNOTEDETAIL = AttributesEnum.ArNoteDetail.index();
    public static final int ALLCUSTOMERS = AttributesEnum.AllCustomers.index();
    public static final int SOSALESPERSONS = AttributesEnum.SoSalesPersons.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ArNoteMasterImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolfms.erpsolfmsmodel.erpsolfmseo.ArNoteMaster");
    }

    /**
     * Gets the attribute value for NoteCode, using the alias name NoteCode.
     * @return the value of NoteCode
     */
    public String getNoteCode() {
        return (String) getAttributeInternal(NOTECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoteCode.
     * @param value value to set the NoteCode
     */
    public void setNoteCode(String value) {
        setAttributeInternal(NOTECODE, value);
    }

    /**
     * Gets the attribute value for Customerid, using the alias name Customerid.
     * @return the value of Customerid
     */
    public String getCustomerid() {
        return (String) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Customerid.
     * @param value value to set the Customerid
     */
    public void setCustomerid(String value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for Deptid, using the alias name Deptid.
     * @return the value of Deptid
     */
    public String getDeptid() {
        return (String) getAttributeInternal(DEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Deptid.
     * @param value value to set the Deptid
     */
    public void setDeptid(String value) {
        setAttributeInternal(DEPTID, value);
    }

    /**
     * Gets the attribute value for Companyid, using the alias name Companyid.
     * @return the value of Companyid
     */
    public String getCompanyid() {
        return (String) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Companyid.
     * @param value value to set the Companyid
     */
    public void setCompanyid(String value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for DocTypeId, using the alias name DocTypeId.
     * @return the value of DocTypeId
     */
    public String getDocTypeId() {
        return (String) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypeId.
     * @param value value to set the DocTypeId
     */
    public void setDocTypeId(String value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for EntryDate, using the alias name EntryDate.
     * @return the value of EntryDate
     */
    public Date getEntryDate() {
        return (Date) getAttributeInternal(ENTRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntryDate.
     * @param value value to set the EntryDate
     */
    public void setEntryDate(Date value) {
        setAttributeInternal(ENTRYDATE, value);
    }

    /**
     * Gets the attribute value for TotalAmount, using the alias name TotalAmount.
     * @return the value of TotalAmount
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) getAttributeInternal(TOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalAmount.
     * @param value value to set the TotalAmount
     */
    public void setTotalAmount(BigDecimal value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for RefVoucher, using the alias name RefVoucher.
     * @return the value of RefVoucher
     */
    public String getRefVoucher() {
        return (String) getAttributeInternal(REFVOUCHER);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefVoucher.
     * @param value value to set the RefVoucher
     */
    public void setRefVoucher(String value) {
        setAttributeInternal(REFVOUCHER, value);
    }

    /**
     * Gets the attribute value for Submit, using the alias name Submit.
     * @return the value of Submit
     */
    public String getSubmit() {
        return (String) getAttributeInternal(SUBMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Submit.
     * @param value value to set the Submit
     */
    public void setSubmit(String value) {
        setAttributeInternal(SUBMIT, value);
    }

    /**
     * Gets the attribute value for PostToIntFace, using the alias name PostToIntFace.
     * @return the value of PostToIntFace
     */
    public String getPostToIntFace() {
        return (String) getAttributeInternal(POSTTOINTFACE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PostToIntFace.
     * @param value value to set the PostToIntFace
     */
    public void setPostToIntFace(String value) {
        setAttributeInternal(POSTTOINTFACE, value);
    }

    /**
     * Gets the attribute value for PostToGl, using the alias name PostToGl.
     * @return the value of PostToGl
     */
    public String getPostToGl() {
        return (String) getAttributeInternal(POSTTOGL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PostToGl.
     * @param value value to set the PostToGl
     */
    public void setPostToGl(String value) {
        setAttributeInternal(POSTTOGL, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for SubmitBy, using the alias name SubmitBy.
     * @return the value of SubmitBy
     */
    public String getSubmitBy() {
        return (String) getAttributeInternal(SUBMITBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmitBy.
     * @param value value to set the SubmitBy
     */
    public void setSubmitBy(String value) {
        setAttributeInternal(SUBMITBY, value);
    }

    /**
     * Gets the attribute value for GlvoucherNo, using the alias name GlvoucherNo.
     * @return the value of GlvoucherNo
     */
    public String getGlvoucherNo() {
        return (String) getAttributeInternal(GLVOUCHERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlvoucherNo.
     * @param value value to set the GlvoucherNo
     */
    public void setGlvoucherNo(String value) {
        setAttributeInternal(GLVOUCHERNO, value);
    }

    /**
     * Gets the attribute value for ArPosted, using the alias name ArPosted.
     * @return the value of ArPosted
     */
    public String getArPosted() {
        return (String) getAttributeInternal(ARPOSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArPosted.
     * @param value value to set the ArPosted
     */
    public void setArPosted(String value) {
        setAttributeInternal(ARPOSTED, value);
    }

    /**
     * Gets the attribute value for Salespersonid, using the alias name Salespersonid.
     * @return the value of Salespersonid
     */
    public String getSalespersonid() {
        return (String) getAttributeInternal(SALESPERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Salespersonid.
     * @param value value to set the Salespersonid
     */
    public void setSalespersonid(String value) {
        setAttributeInternal(SALESPERSONID, value);
    }

    /**
     * Gets the attribute value for Pid, using the alias name Pid.
     * @return the value of Pid
     */
    public Integer getPid() {
        return (Integer) getAttributeInternal(PID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Pid.
     * @param value value to set the Pid
     */
    public void setPid(Integer value) {
        setAttributeInternal(PID, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for RemarksNarr, using the alias name RemarksNarr.
     * @return the value of RemarksNarr
     */
    public String getRemarksNarr() {
        return (String) getAttributeInternal(REMARKSNARR);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemarksNarr.
     * @param value value to set the RemarksNarr
     */
    public void setRemarksNarr(String value) {
        setAttributeInternal(REMARKSNARR, value);
    }

    /**
     * Gets the attribute value for FromSaleDate, using the alias name FromSaleDate.
     * @return the value of FromSaleDate
     */
    public Date getFromSaleDate() {
        return (Date) getAttributeInternal(FROMSALEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromSaleDate.
     * @param value value to set the FromSaleDate
     */
    public void setFromSaleDate(Date value) {
        setAttributeInternal(FROMSALEDATE, value);
    }

    /**
     * Gets the attribute value for ToSaleDate, using the alias name ToSaleDate.
     * @return the value of ToSaleDate
     */
    public Date getToSaleDate() {
        return (Date) getAttributeInternal(TOSALEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToSaleDate.
     * @param value value to set the ToSaleDate
     */
    public void setToSaleDate(Date value) {
        setAttributeInternal(TOSALEDATE, value);
    }

    /**
     * Gets the attribute value for DiscountType, using the alias name DiscountType.
     * @return the value of DiscountType
     */
    public String getDiscountType() {
        return (String) getAttributeInternal(DISCOUNTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscountType.
     * @param value value to set the DiscountType
     */
    public void setDiscountType(String value) {
        setAttributeInternal(DISCOUNTTYPE, value);
    }

    /**
     * Gets the attribute value for AuditorCheck, using the alias name AuditorCheck.
     * @return the value of AuditorCheck
     */
    public String getAuditorCheck() {
        return (String) getAttributeInternal(AUDITORCHECK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuditorCheck.
     * @param value value to set the AuditorCheck
     */
    public void setAuditorCheck(String value) {
        setAttributeInternal(AUDITORCHECK, value);
    }

    /**
     * Gets the attribute value for AuditRemarks, using the alias name AuditRemarks.
     * @return the value of AuditRemarks
     */
    public String getAuditRemarks() {
        return (String) getAttributeInternal(AUDITREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuditRemarks.
     * @param value value to set the AuditRemarks
     */
    public void setAuditRemarks(String value) {
        setAttributeInternal(AUDITREMARKS, value);
    }

    /**
     * Gets the attribute value for RefSalesorderid, using the alias name RefSalesorderid.
     * @return the value of RefSalesorderid
     */
    public String getRefSalesorderid() {
        return (String) getAttributeInternal(REFSALESORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefSalesorderid.
     * @param value value to set the RefSalesorderid
     */
    public void setRefSalesorderid(String value) {
        setAttributeInternal(REFSALESORDERID, value);
    }

    /**
     * Gets the attribute value for RefDoctypeid, using the alias name RefDoctypeid.
     * @return the value of RefDoctypeid
     */
    public String getRefDoctypeid() {
        return (String) getAttributeInternal(REFDOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefDoctypeid.
     * @param value value to set the RefDoctypeid
     */
    public void setRefDoctypeid(String value) {
        setAttributeInternal(REFDOCTYPEID, value);
    }

    /**
     * Gets the attribute value for RefVoucherNo, using the alias name RefVoucherNo.
     * @return the value of RefVoucherNo
     */
    public String getRefVoucherNo() {
        return (String) getAttributeInternal(REFVOUCHERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefVoucherNo.
     * @param value value to set the RefVoucherNo
     */
    public void setRefVoucherNo(String value) {
        setAttributeInternal(REFVOUCHERNO, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * Gets the attribute value for DocDate, using the alias name DocDate.
     * @return the value of DocDate
     */
    public Date getDocDate() {
        return (Date) getAttributeInternal(DOCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDate.
     * @param value value to set the DocDate
     */
    public void setDocDate(Date value) {
        setAttributeInternal(DOCDATE, value);
    }

    /**
     * Gets the attribute value for LocCurrcode, using the alias name LocCurrcode.
     * @return the value of LocCurrcode
     */
    public String getLocCurrcode() {
        return (String) getAttributeInternal(LOCCURRCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocCurrcode.
     * @param value value to set the LocCurrcode
     */
    public void setLocCurrcode(String value) {
        setAttributeInternal(LOCCURRCODE, value);
    }

    /**
     * Gets the attribute value for ExchangeRate, using the alias name ExchangeRate.
     * @return the value of ExchangeRate
     */
    public BigDecimal getExchangeRate() {
        return (BigDecimal) getAttributeInternal(EXCHANGERATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExchangeRate.
     * @param value value to set the ExchangeRate
     */
    public void setExchangeRate(BigDecimal value) {
        setAttributeInternal(EXCHANGERATE, value);
    }

    /**
     * Gets the attribute value for FcurrTotalAmount, using the alias name FcurrTotalAmount.
     * @return the value of FcurrTotalAmount
     */
    public BigDecimal getFcurrTotalAmount() {
        return (BigDecimal) getAttributeInternal(FCURRTOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FcurrTotalAmount.
     * @param value value to set the FcurrTotalAmount
     */
    public void setFcurrTotalAmount(BigDecimal value) {
        setAttributeInternal(FCURRTOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for Notemasterseq, using the alias name Notemasterseq.
     * @return the value of Notemasterseq
     */
    public Integer getNotemasterseq() {
        return (Integer) getAttributeInternal(NOTEMASTERSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notemasterseq.
     * @param value value to set the Notemasterseq
     */
    public void setNotemasterseq(Integer value) {
        setAttributeInternal(NOTEMASTERSEQ, value);
    }

    /**
     * Gets the attribute value for txtCustomerName, using the alias name txtCustomerName.
     * @return the value of txtCustomerName
     */
    public String gettxtCustomerName() {
        return (String) getAttributeInternal(TXTCUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtCustomerName.
     * @param value value to set the txtCustomerName
     */
    public void settxtCustomerName(String value) {
        setAttributeInternal(TXTCUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for txtSalesPersonName, using the alias name txtSalesPersonName.
     * @return the value of txtSalesPersonName
     */
    public String gettxtSalesPersonName() {
        return (String) getAttributeInternal(TXTSALESPERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtSalesPersonName.
     * @param value value to set the txtSalesPersonName
     */
    public void settxtSalesPersonName(String value) {
        setAttributeInternal(TXTSALESPERSONNAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getArNoteDetail() {
        return (RowIterator) getAttributeInternal(ARNOTEDETAIL);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAllCustomers() {
        return (EntityImpl) getAttributeInternal(ALLCUSTOMERS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAllCustomers(EntityImpl value) {
        setAttributeInternal(ALLCUSTOMERS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getSoSalesPersons() {
        return (EntityImpl) getAttributeInternal(SOSALESPERSONS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSoSalesPersons(EntityImpl value) {
        setAttributeInternal(SOSALESPERSONS, value);
    }


    /**
     * @param notemasterseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer notemasterseq) {
        return new Key(new Object[] { notemasterseq });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
    
            setERPSolPKColumnName("Notemasterseq");
            setERPSolPKSeqName("AR_NOTE_MASTER_SEQ");
            setCompanyid(ERPSolGlobClassModel.doGetUserCompanyCode());
        setLocationid(ERPSolGlobClassModel.doGetUserLocationCode());

    //        //        setERPISGenertePK("NO");
        //        SequenceImpl seq = new SequenceImpl("SO_SALES_ORDER_SEQ", getDBTransaction());
        //        setSalesorderseq(seq.getSequenceNumber());
            super.create(attributeList);
        
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

